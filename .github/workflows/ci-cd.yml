name: CI/CD Pipeline

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build_and_test:
    runs-on: ubuntu-latest

    defaults:
      run:
        working-directory: ESG API
<<<<<<< HEAD
    defaults:
      run:
        working-directory: ESG API
=======
    env:
      DOTNET_ROLL_FORWARD: LatestMajor
      # Porta onde a API vai rodar no runner
      API_PORT: 8080
      # Base URL que os testes BDD irão consumir
      TEST_BASE_URL: http://localhost:8080
>>>>>>> 255f29c (ci: ajustes finais no workflow CI/CD (Docker build context e readiness))

    steps:
      - name: Checkout repository
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup .NET 8
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '8.0.x'

      - name: Restore dependencies
        run: dotnet restore ESG.Compliance.Api.sln
<<<<<<< HEAD
      - name: Restore dependencies
        run: dotnet restore ESG.Compliance.Api.sln

      - name: Build (Release)
        run: dotnet build ESG.Compliance.Api.sln -c Release --no-restore
=======
      - name: Restore
        run: dotnet restore

      - name: Build (Release)
        run: dotnet build ESG.Compliance.Api.sln -c Release --no-restore
        run: dotnet build -c Release --no-restore
>>>>>>> 255f29c (ci: ajustes finais no workflow CI/CD (Docker build context e readiness))

      - name: Start API
        run: |
          dotnet run --project ESG.Compliance.Api/ESG.Compliance.Api.csproj --urls=http://0.0.0.0:8080 &
          echo "API_PID=$!" >> $GITHUB_ENV

      - name: Wait for API to be ready
        run: |
          for i in {1..40}; do
            curl -fsS http://localhost:8080/swagger/index.html >/dev/null && echo "✅ API UP" && exit 0
            echo "⏳ Waiting API... ($i)"; sleep 3
          done
          echo "❌ API did not start in time"; exit 1

      - name: Run BDD Tests (Release)
        env:
          TEST_BASE_URL: http://localhost:8080
        run: dotnet test ESG.Compliance.BddTests -c Release --no-build --verbosity normal

      - name: Stop API
        if: always()
        run: |
          if [ -n "${{ env.API_PID }}" ]; then kill ${{ env.API_PID }} || true; fi
